if(NOT SOURCESDK_DIR)
	message(FATAL_ERROR "SOURCESDK_DIR is empty")
endif()

if(NOT SOURCESDK_LIB_DIR)
	message(FATAL_ERROR "SOURCESDK_LIB_DIR is empty")
endif()

## Generate protobuf source & headers
if(LINUX)
	set(SOURCESDK_PROTOC_EXECUTABLE ${SOURCESDK_DIR}/devtools/bin/linux/protoc)
	set(SOURCESDK_PROTOBUF_STATIC_LIBRARY ${SOURCESDK_LIB_DIR}/linux64/release/libprotobuf.a)
elseif(WINDOWS)
	set(SOURCESDK_PROTOC_EXECUTABLE ${SOURCESDK_DIR}/devtools/bin/protoc.exe)
	set(SOURCESDK_PROTOBUF_STATIC_LIBRARY ${SOURCESDK_LIB_DIR}/public/win64/2015/libprotobuf.lib)
endif()

set(SOURCESDK_PROTOBUF_DIR "${SOURCESDK_DIR}/thirdparty/protobuf-3.21.8")
set(SOURCESDK_PROTOBUF_SOURCE_DIR "${SOURCESDK_PROTOBUF_DIR}/src")
list(APPEND SOURCESDK_INCLUDE_DIR ${SOURCESDK_PROTOBUF_SOURCE_DIR})

set(SOURCESDK_PROTO_FILENAME_FILES
	${SOURCESDK_PROTO_FILENAME_FILES}
)

foreach(PROTO_FILE IN LISTS SOURCESDK_PROTO_FILES)
	list(APPEND SOURCESDK_PROTO_FILENAME_FILES "${PROTO_FILE}.proto")
endforeach()

set(SOURCESDK_PROTO_PATH_ARGS
	${SOURCESDK_PROTO_PATH_ARGS}
)

list(APPEND SOURCESDK_PROTO_DIRS ${SOURCESDK_PROTOBUF_SOURCE_DIR})

foreach(PROTO_DIR IN LISTS SOURCESDK_PROTO_DIRS)
	list(APPEND SOURCESDK_PROTO_PATH_ARGS
		"--proto_path=${PROTO_DIR}"
	)
endforeach()

foreach(PROTO_FILENAME IN LISTS SOURCESDK_PROTO_FILENAME_FILES)
	get_filename_component(PROTO_DIR "${PROTO_FILENAME}" DIRECTORY)

	execute_process(
		COMMAND ${CMAKE_COMMAND} -E echo "Generating Protobuf file - ${PROTO_FILENAME}"
		COMMAND ${SOURCESDK_PROTOC_EXECUTABLE} ${SOURCESDK_PROTO_PATH_ARGS} --cpp_out=${PROTO_DIR} ${PROTO_FILENAME}
		WORKING_DIRECTORY ${SOURCESDK_DIR}
	)
endforeach()

foreach(PROTO_FILE IN LISTS SOURCESDK_PROTO_FILES)
	list(APPEND SOURCESDK_PROTO_FILENAME_FILES "${PROTO_FILE}.proto")
endforeach()

set(SOURCESDK_PROTO_SOURCE_FILES
	${SOURCESDK_PROTO_SOURCE_FILES}
)

foreach(PROTO_FILE IN LISTS SOURCESDK_PROTO_FILES)
	list(APPEND SOURCESDK_PROTO_SOURCE_FILES "${SOURCESDK_DIR}/${PROTO_FILE}.pb.cc")
endforeach()
