if(NOT PROTOBUF_DIR)
	message(FATAL_ERROR "PROTOBUF_DIR is empty")
endif()

if(NOT SOURCESDK_DIR)
	message(FATAL_ERROR "SOURCESDK_DIR is empty")
endif()

set(SOURCESDK_PROTO_OUTPUT_DIR "${SOURCESDK_DIR}/common")
set(SOURCESDK_PROTOC_EXE "protoc${CMAKE_EXECUTABLE_SUFFIX}")

set(SOURCESDK_SKIP_PROTOS
	steammessages_base # steammessages instead
	base_gcmessages_csgo # base_gcmessages instead
)

foreach(PROTO_DIR ${SOURCESDK_PROTO_DIRS})
	if(EXISTS ${PROTO_DIR})
		file(GLOB PROTO_FILENAMES "${PROTO_DIR}/*.proto")

		list(APPEND SOURCESDK_PROTO_FILENAMES ${PROTO_FILENAMES})
	else()
		message(WARNING "Proto directory \"${PROTO_DIR}\" is not exists")
	endif()
endforeach()

if(NOT SOURCESDK_COMPILE_PROTOBUF)
	set(SOURCESDK_PROTOS
		${SOURCESDK_PROTOS}

		${SOURCESDK_NEEDED_PROTOS}
	)
endif()

if(SOURCESDK_PROTOS)
	foreach(PROTO ${SOURCESDK_PROTOS})

		if(PROTO IN_LIST SOURCESDK_SKIP_PROTOS)
			message(WARNING "Ignore skipped ${PROTO} proto")
		endif()
	endforeach()
else()
	foreach(PROTO_FILENAME ${SOURCESDK_PROTO_FILENAMES})
		get_filename_component(PROTO "${PROTO_FILENAME}" NAME_WLE)

		if(NOT PROTO IN_LIST SOURCESDK_SKIP_PROTOS)
			list(APPEND SOURCESDK_PROTOS "${PROTO}")
		endif()
	endforeach()
endif()

set(SOURCESDK_PROTOC_EXECUTABLE "${DEVTOOLS_BIN_DIR}/${SOURCESDK_PLATFORM_DIR}/${SOURCESDK_PROTOC_EXE}")

set(SOURCESDK_PROTOBUF_SOURCE_DIR "${PROTOBUF_DIR}/src")
list(APPEND SOURCESDK_INCLUDE_DIRS ${SOURCESDK_PROTOBUF_SOURCE_DIR})

set(SOURCESDK_PROTO_FILENAME_FILES
	${SOURCESDK_PROTO_FILENAME_FILES}
)

foreach(PROTO_FILE IN LISTS SOURCESDK_PROTOS)
	list(APPEND SOURCESDK_PROTO_FILENAME_FILES "${PROTO_FILE}.proto")
endforeach()

if(SOURCESDK_COMPILE_PROTOBUF)
	set(SOURCESDK_PROTO_SOURCE_FILES
		${SOURCESDK_PROTO_SOURCE_FILES}
	)

	foreach(PROTO_FILE IN LISTS SOURCESDK_PROTOS)
		list(APPEND SOURCESDK_PROTO_SOURCE_FILES "${SOURCESDK_PROTO_OUTPUT_DIR}/${PROTO_FILE}.pb.cc")
	endforeach()
endif()

set(SOURCESDK_LOGS_DIRECTORY "logs")
set(SOURCESDK_LOGS_PROTOS_DIRECTORY "${SOURCESDK_LOGS_DIRECTORY}/protos")
string(TIMESTAMP SOURCESDK_PROTO_DATE_FILENAME "%Y_%m_%d-%H_%M_%S")
set(SOURCESDK_LOGS_PROTOS_DATE_DIRECTORY "${SOURCESDK_LOGS_PROTOS_DIRECTORY}/${SOURCESDK_PROTO_DATE_FILENAME}")
set(SOURCESDK_LOGS_PROTOS_DATE_ERRORS_DIRECTORY "${SOURCESDK_LOGS_PROTOS_DIRECTORY}/${SOURCESDK_PROTO_DATE_FILENAME}/errors")
