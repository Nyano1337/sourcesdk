if(NOT SOURCESDK_DIR)
	message(FATAL_ERROR "SOURCESDK_DIR is empty")
endif()

if(NOT SOURCESDK_TIER1_DIR)
	message(FATAL_ERROR "SOURCESDK_TIER1_DIR is empty")
endif()

set(SOURCESDK_TIER1_NAME "tier1")
set(SOURCESDK_TIER1_OUTPUT_NAME "${SOURCESDK_TIER1_NAME}")

set(SOURCESDK_TIER1_COMPILER_OPTIONS
	${SOURCESDK_COMPILER_OPTIONS}
)

set(SOURCESDK_TIER1_LINK_OPTIONS
	${SOURCESDK_LINK_OPTIONS}
)

set(SOURCESDK_TIER1_COMPILE_DEFINITIONS
	${SOURCESDK_COMPILE_DEFINITIONS}

	_LIB
	TIER1_STATIC_LIB
)

set(SOURCESDK_PUBLIC_TIER1_INCLUDE_DIR "${SOURCESDK_DIR}/public/tier1")

set(SOURCESDK_TIER1_INCLUDE_DIRS
	${SOURCESDK_DIR}/public/tier0
	${SOURCESDK_PUBLIC_TIER1_INCLUDE_DIR}
	${SOURCESDK_DIR}/public
)

list(APPEND SOURCESDK_INCLUDE_DIRS
	${SOURCESDK_PUBLIC_TIER1_INCLUDE_DIR}
)

set(SOURCESDK_TIER1_SOURCE_FILES
	${SOURCESDK_TIER1_DIR}/bitbuf.cpp
	${SOURCESDK_TIER1_DIR}/convar.cpp
	${SOURCESDK_TIER1_DIR}/generichash.cpp
	${SOURCESDK_TIER1_DIR}/newbitbuf.cpp
	${SOURCESDK_TIER1_DIR}/processor_detect.cpp
	${SOURCESDK_TIER1_DIR}/rangecheckedvar.cpp
	${SOURCESDK_TIER1_DIR}/tier1.cpp
	${SOURCESDK_TIER1_DIR}/utlbufferutil.cpp
	${SOURCESDK_TIER1_DIR}/keyvalues3.cpp
)

add_library(${SOURCESDK_TIER1_NAME} ${SOURCESDK_TIER1_SOURCE_FILES})

set_target_properties(${SOURCESDK_TIER1_NAME} PROPERTIES
	C_STANDARD 17
	C_STANDARD_REQUIRED ON
	C_EXTENSIONS OFF

	CXX_STANDARD 17
	CXX_STANDARD_REQUIRED ON
	CXX_EXTENSIONS OFF
)

set_target_properties(${SOURCESDK_TIER1_NAME} PROPERTIES OUTPUT_NAME ${SOURCESDK_TIER1_OUTPUT_NAME})

if(WINDOWS)
	if(SOURCESDK_MSVC_RUNTIME_LIBRARY)
		set_target_properties(${SOURCESDK_TIER1_NAME} PROPERTIES MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
	endif()
elseif(MACOS)
	set_target_properties(${SOURCESDK_TIER1_NAME} PROPERTIES OSX_ARCHITECTURES "x86_64")
endif()

target_compile_options(${SOURCESDK_TIER1_NAME} PRIVATE ${PLATFORM_COMPILE_OPTIONS} ${SOURCESDK_TIER1_COMPILER_OPTIONS})
target_link_options(${SOURCESDK_TIER1_NAME} PRIVATE ${PLATFORM_LINK_OPTIONS} ${SOURCESDK_TIER1_LINK_OPTIONS})

target_compile_definitions(${SOURCESDK_TIER1_NAME} PRIVATE ${PLATFORM_COMPILE_DEFINITIONS} ${SOURCESDK_TIER1_COMPILE_DEFINITIONS})
target_include_directories(${SOURCESDK_TIER1_NAME} PRIVATE ${PLATFORM_INCLUDE_DIRS} ${SOURCESDK_TIER1_INCLUDE_DIRS})
